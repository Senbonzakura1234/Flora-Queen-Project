@using Flora_Queen_Project.Controllers
@using Flora_Queen_Project.Models
@model IEnumerable<Flora_Queen_Project.Models.Order>
@* ReSharper disable  Html.IdNotResolved *@

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
    var indexSo = 1;

    ViewBag.Title = "List";
    var shipName = ((string)ViewBag.shipName);
    var minAmount = ((double?)ViewBag.minAmount).Value;
    var maxAmount = ((double?)ViewBag.maxAmount).Value;
    var sortBy = ((int?)ViewBag.sortBy).Value;
    var payment = ((int?)ViewBag.payment).Value;
    var direct = ((int?)ViewBag.direct).Value;
    var directSet = ((int?)ViewBag.directSet).Value;
    var totalPage = ((int?)ViewBag.TotalPage).Value;
    var currentPage = ((int?)ViewBag.CurrentPage).Value;
    var limit = ((int?)ViewBag.Limit).Value;
    var status = ((int?)ViewBag.status).Value;
    var month = ((int?)ViewBag.month).Value;
    var year = ((int?)ViewBag.year).Value;
    var currentPara = "?shipName=" + ViewBag.shipName +
              "&minAmount=" + ViewBag.minAmount +
              "&maxAmount=" + ViewBag.maxAmount +
              "&payment=" + ViewBag.payment +
              "&direct=" + ViewBag.direct +
              "&totalPage=" + ViewBag.TotalPage +
              "&currentPage=" + ViewBag.CurrentPage +
              "&limit=" + ViewBag.Limit +
              "&status=" + ViewBag.status +
              "&sortBy=" + ViewBag.sortBy
;
}

@section styles
{
    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    @Styles.Render("~/Content/Purple DashBoard/css/slider-range.css")
    @Styles.Render("~/Content/Purple DashBoard/css/paginate.css")
}
<div class="row">
    <div class="col-12 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">Search Order</h4>

                @using (Html.BeginForm("Index", "Orders", FormMethod.Get, new { id = "orderForm" }))
                {
                    @Html.Hidden("minAmount", minAmount, new { id = "minAmount" })
                    @Html.Hidden("maxAmount", maxAmount, new { id = "maxAmount" })
                    @Html.Hidden("sortBy", sortBy, new { id = "sortBy" })
                    @Html.Hidden("direct", direct, new { id = "direct" })
                    @Html.Hidden("status", status, new { id = "status" })
                    @Html.Hidden("payment", payment, new { id = "payment" })
                    @Html.Hidden("month", month, new { id = "month" })
                    @Html.Hidden("year", year, new { id = "year" })
                    <div class="form-row">
                        <div class="form-group col-md-4">
                            @Html.Label("shipName", "Ship Name")
                            @Html.TextBox("shipName", shipName, new { @class = "form-control", id = "shipName" })
                        </div>
                        <div class="form-group col-md-4">
                            @Html.Label("", "Amount Range")
                            <div class="px-3 mt-3">
                                <div id="slider-range">

                                </div>
                            </div>
                            <div class="px-3 mt-1">
                                <div id="amount" class="text-primary"></div>
                            </div>
                        </div>
                        <div class="form-group col-md-4">
                            @* ReSharper disable once Html.IdNotResolved *@
                            @Html.Label("OrderStatus", "Status")
                            <select id="OrderStatus" class="form-control">
                                <option value="5">----------</option>
                                @foreach (var item in Enum.GetValues(typeof(Order.OrderStatusEnum)))
                                {
                                    var value = (int)item;
                                    var name = Enum.GetName(typeof(Order.OrderStatusEnum), item);
                                    <option value="@value" @(status == value ? "selected" : "")>@name</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="form-row">
                        <a href="@Url.Action("Index","Orders")" class="btn btn-light ml-auto">Clear Filter</a>
                        <button type="submit" class="btn btn-gradient-primary ml-2">Submit</button>
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="col-12 grid-margin stretch-card">
        <div class="card">
            <div class="card-body table-responsive">
                <h4 class="card-title">Orders</h4>
                <p class="card-description text-small">
                    Showing @((currentPage - 1) * limit + 1) – @((currentPage - 1) * limit + Model.Count()) of @ViewBag.TotalItem results
                </p>    
                <table class="table" id="update-student">
                    <thead class="text-primary">
                        <tr>
                            <th>
                                #
                            </th>
                            <th class="text-center">
                                <a href="#/" class="sortData text-primary"
                                   data-sort="@((int) OrdersController.SortEnum.Name)"
                                   data-direct="@directSet">
                                    @Html.DisplayNameFor(model => model.ShipName)
                                    <span style="font-size: 15px" class="mdi
                                          @(direct == (int) OrdersController.DirectEnum.Asc ? "mdi-menu-down" : "mdi-menu-up")
                                          @(sortBy == (int) OrdersController.SortEnum.Name ? "" : "d-none")">
                                    </span>
                                </a>
                            </th>
                            <th class="text-center">
                                <a href="#/" class="sortData text-primary"
                                   data-sort="@((int) OrdersController.SortEnum.Amount)"
                                   data-direct="@directSet">
                                    @Html.DisplayNameFor(model => model.Amount)
                                    <span style="font-size: 15px" class="mdi
                                          @(direct == (int) OrdersController.DirectEnum.Asc ? "mdi-menu-down" : "mdi-menu-up")
                                          @(sortBy == (int) OrdersController.SortEnum.Amount ? "" : "d-none")">
                                    </span>
                                </a>
                            </th>
                            <th class="text-center d-none d-sm-table-cell ">
                                <a href="#/" class="sortData text-primary"
                                   data-sort="@((int) OrdersController.SortEnum.Date)"
                                   data-direct="@directSet">
                                    @Html.DisplayNameFor(model => model.CreatedAt)
                                    <span style="font-size: 15px" class="mdi
                                          @(direct == (int) OrdersController.DirectEnum.Asc ? "mdi-menu-down" : "mdi-menu-up")
                                          @(sortBy == (int) OrdersController.SortEnum.Date ? "" : "d-none")">
                                    </span>
                                </a>
                            </th>
                            <th class="text-center d-none d-xl-table-cell">
                                <a href="#/" class="sortData text-primary"
                                   data-sort="@((int) OrdersController.SortEnum.PaymentMethod)"
                                   data-direct="@directSet">
                                    @Html.DisplayNameFor(model => model.PaymentMethod)
                                    <span style="font-size: 15px" class="mdi
                                          @(direct == (int) OrdersController.DirectEnum.Asc ? "mdi-menu-down" : "mdi-menu-up")
                                          @(sortBy == (int) OrdersController.SortEnum.PaymentMethod ? "" : "d-none")">
                                    </span>
                                </a>
                            </th>
                            <th class="text-center d-none d-xl-table-cell">
                                <a href="#/" class="sortData text-primary"
                                   data-sort="@((int) OrdersController.SortEnum.Status)"
                                   data-direct="@directSet">
                                    @Html.DisplayNameFor(model => model.OrderStatus)
                                    <span style="font-size: 15px" class="mdi
                                          @(direct == (int) OrdersController.DirectEnum.Asc ? "mdi-menu-down" : "mdi-menu-up")
                                          @(sortBy == (int) OrdersController.SortEnum.Status ? "" : "d-none")">
                                    </span>
                                </a>
                            </th>
                            <th class="text-center d-none d-lg-table-cell">
                                Edit
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {

                            <tr>
                                <td>
                                    <b class="text-small">@indexSo</b>
                                </td>
                                <td>
                                    <a href="@Url.Action("Details", "Orders", new {id = item.Id})" class="badge w-100 badge-gradient-primary w-100">
                                        @Html.DisplayFor(modelItem => item.ShipName)
                                    </a>
                                </td>
                                <td class="text-center">
                                    <b class="text-small">$@Html.DisplayFor(modelItem => item.Amount)</b>
                                </td>
                                <td class="text-center d-none d-sm-table-cell">
                                    <a href="#/" class="text-small date-click" data-month="@item.CreatedAt.Month" data-year="@item.CreatedAt.Year">
                                        @Html.DisplayFor(modelItem => item.CreatedAt)
                                    </a>
                                </td>
                                <td class="d-none d-xl-table-cell text-center">
                                    <a href="#/" data-payment="@((int) item.PaymentMethod)"
                                       class="badge paymentClick w-100 @(item.PaymentMethod == Order.OrderPaymentMethodEnum.OnlineBanking ? "badge-outline-primary"
                                                             : item.PaymentMethod == Order.OrderPaymentMethodEnum.DirectBankTransfer ? "badge-outline-success"
                                                                 : "badge-outline-info")">
                                        @Html.DisplayFor(modelItem => item.PaymentMethod)
                                    </a>
                                </td>
                                <td class="d-none d-xl-table-cell text-center">
                                    <a href="#/" data-status="@((int) item.OrderStatus)"
                                       class="badge orderStatusClick w-100 @(item.OrderStatus == Order.OrderStatusEnum.Done ? "badge-gradient-primary"
                                                             : item.OrderStatus == Order.OrderStatusEnum.Paid ? "badge-gradient-success"
                                                             : item.OrderStatus == Order.OrderStatusEnum.Shipping ? "badge-gradient-info"
                                                             : item.OrderStatus == Order.OrderStatusEnum.Pending ? "badge-gradient-warning"
                                                             : item.OrderStatus == Order.OrderStatusEnum.Cancel ? "badge-gradient-link"
                                                                 : "badge-gradient-secondary")">
                                        @Html.DisplayFor(modelItem => item.OrderStatus)
                                    </a>
                                </td>
                                <td class="text-center d-none d-lg-table-cell">
                                    <a class="badge badge-warning" href="#">
                                        <span class="mdi mdi-pencil-box-outline"></span>
                                    </a>
                                </td>
                            </tr>
                            {
                                indexSo++;
                            }
                        }
                    </tbody>
                </table>
            </div>
            <div class="card-footer bg-white border-0">
                @if (totalPage > 0)
                {
                    <div>
                        <ul class="pagination text-center">
                            <li class="page-item ml-auto" style="opacity: 0"></li>

                            @if (currentPage > 3)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@currentPara&page=@(1)&limit=@(limit)">
                                        <i class="mdi mdi-chevron-double-left"></i>
                                    </a>
                                </li>
                            }

                            @if (currentPage > 1)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@currentPara&page=@(currentPage - 1)&limit=@(limit)">
                                        <i class="mdi mdi-chevron-left"></i>
                                    </a>
                                </li>
                            }

                            @if (currentPage > 2)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@currentPara&page=@(currentPage - 2)&limit=@(limit)">
                                        @(currentPage - 2)
                                    </a>
                                </li>
                            }

                            @if (currentPage > 1)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@currentPara&page=@(currentPage - 1)&limit=@(limit)">
                                        @(currentPage - 1)
                                    </a>
                                </li>
                            }

                            <li class="active page-item" aria-current="page">
                                <a class="page-link" href="@currentPara&page=@(currentPage)&limit=@(limit)">
                                    @currentPage
                                </a>
                            </li>

                            @if (totalPage - currentPage > 0)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@currentPara&page=@(currentPage + 1)&limit=@(limit)">
                                        @(currentPage + 1)
                                    </a>
                                </li>
                            }

                            @if (totalPage - currentPage > 1)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@currentPara&page=@(currentPage + 2)&limit=@(limit)">
                                        @(currentPage + 2)
                                    </a>
                                </li>
                            }

                            @if (currentPage < totalPage)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@currentPara&page=@(currentPage + 1)&limit=@(limit)">
                                        <i class="mdi mdi-chevron-right"></i>
                                    </a>
                                </li>
                            }

                            @if (currentPage < totalPage - 2)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@currentPara&page=@(totalPage)&limit=@(limit)">
                                        <i class="mdi mdi-chevron-double-right"></i>
                                    </a>
                                </li>
                            }

                            <li class="page-item mr-auto" style="opacity: 0"></li>
                        </ul>
                    </div>
                }
            </div>
        </div>
    </div>
</div>


@section scripts
{

    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script type="text/javascript">
        $(function () {
            const minAmount = $("#minAmount").val();
            const maxAmount = $("#maxAmount").val();
            $("#slider-range").slider({
                range: true,
                min: 0,
                max: 500,
                values: [minAmount, maxAmount],
                slide: function (event, ui) {
                    $("#amount").html(`$${ui.values[0]} - $${ui.values[1]}`);
                    $("#minAmount").val(ui.values[0]);
                    $("#maxAmount").val(ui.values[1]);
                }
            });
            $("#amount").html(`$${$("#slider-range").slider("values", 0)} - $${$("#slider-range").slider("values", 1)}`);

            $("#OrderStatus").on("change", function () {
                const orderStatusValue = $("#OrderStatus").val();
                $("#status").val(orderStatusValue);
                console.log($("#status").val());
            });

            $(".date-click").click(function () {
                const monthData = $(this).data("month");
                $('input[name="month"]').val(monthData);
                const yearData = $(this).data("year");
                $('input[name="year"]').val(yearData);
                $("#orderForm").submit();
            });
            $(".sortData").click(function () {
                const sortByData = $(this).data("sort");
                $('input[name="sortBy"]').val(sortByData);
                const directData = $(this).data("direct");
                $('input[name="direct"]').val(directData);
                console.log(directData);
                $("#orderForm").submit();
            });
            $(".orderStatusClick").click(function () {
                const orderStatusData = $(this).data("status");
                console.log(orderStatusData);
                $('#status').val(orderStatusData);
                $("#orderForm").submit();
            });
            $(".paymentClick").click(function () {
                const paymentData = $(this).data("payment");
                console.log(paymentData);
                $('#payment').val(paymentData);
                $("#orderForm").submit();
            });
        });
    </script>
}
